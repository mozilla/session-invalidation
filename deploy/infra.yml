AWSTemplateFormatVersion: 2010-09-09
Description: Create infrastructure required to run the Session Invalidation application in EC2
Parameters:
  KeyPair:
    Type: String
    Description: An EC2 keypair to allow SSH access to the instance
  ApplicationServerPort:
    Type: Number
    Description: The port number that the Session Invalidation application server will run on
Resources:
  SessionInvalidationQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600  # 4 days, the AWS default
      Tags:
        - Key: application
          Value: session-invalidation
        - Key: stack
          Value: !Ref AWS::StackName
        - Key: source
          Value: https://github.com/mozilla/session-invalidation
  SQSWriterUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: AllowWritingToSessionInvalidationSQSQueue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource:
                  - !GetAtt SessionInvalidationQueue.Arn
  SQSWriterUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 20191230
      Status: Active
      UserName: !Ref SQSWriterUser
  SQSReaderUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: AllowReadingFromSessionInvalidationSQSQueue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                Resource:
                  - !GetAtt SessionInvalidationQueue.Arn
  SQSReaderUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 20191230
      Status: Active
      UserName: !Ref SQSReaderUser
  GlobalVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsHostnames: "false"
      EnableDnsSupport: "false"
      #InstanceTenancy: dedicated
  GlobalSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: "10.0.0.0/16"
      AvailabilityZone: us-west-2a
      MapPublicIpOnLaunch: "true"
      VpcId:
        Ref: GlobalVpc
  SecGroupNginx:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "EC2 Nginx Instance Defense"
      GroupDescription: "Forwards Internet traffic to Nginx by default and allows Nginx to talk to the application"
      VpcId:
        Ref: GlobalVpc
      SecurityGroupIngress:
        # Allow traffic over HTTP
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
        # Allow traffic over HTTPS
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
        # Allow SSH connections
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 192.168.1.1/32
  SecGroupApplication:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "EC2 Application Instance Defense"
      GroupDescription: "Allows only traffic from the Nginx Security Group"
      VpcId:
        Ref: GlobalVpc
      SecurityGroupIngress:
        # Allow SSH connections
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref SecGroupNginx
        # Only allow any other traffic from the Nginx security group
        - IpProtocol: tcp
          FromPort: !Ref ApplicationServerPort
          ToPort: !Ref ApplicationServerPort
          SourceSecurityGroupId: !Ref SecGroupNginx
  Ec2NginxInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyPair
      AvailabilityZone: us-west-2a
      ImageId: ami-003634241a8fcdec0
      InstanceType: t2.micro
      #Tenancy: dedicated
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "SecGroupNginx"
          SubnetId:
            Ref: "GlobalSubnet"
  Ec2ApplicationInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyPair
      AvailabilityZone: us-west-2a
      ImageId: ami-003634241a8fcdec0
      InstanceType: t2.micro
      #Tenancy: dedicated
      NetworkInterfaces:
        - DeviceIndex: "0"
          GroupSet:
            - Ref: "SecGroupApplication"
          SubnetId:
            Ref: "GlobalSubnet"
Outputs:
  PublicIP:
    Description: The public IP address of the internet-facing Nginx EC2 instance
    Value: !GetAtt Ec2NginxInstance.PublicIp
  NginxInstanceId:
    Description: The ID of the newly-created EC2 instance that runs Nginx
    Value: !Ref Ec2NginxInstance
  ApplicationInstanceId:
    Description: The ID of the newly-created EC2 instance that runs the session invalidation application
    Value: !Ref Ec2ApplicationInstance 
  SQSWriterUserName:
    Description: The name of the IAM user created with permissions enabling the session invalidation application to send to SQS
    Value: !Ref SQSWriterUser
  SQSWriterUserAccessKeyId:
    Description: The access key ID of the IAM user granting the session invalidation application send access to SQS
    Value: !Ref SQSWriterUserAccessKey
  SQSWriterUserSecretKey:
    Description: The secret key for the IAM user granting the session invalidation application send access to SQS
    Value: !GetAtt SQSWriterUserAccessKey.SecretAccessKey
  SQSReaderUserName:
    Description: The name of the IAM user created with permissions enabling the session invalidation application to read from SQS
    Value: !Ref SQSReaderUser
  SQSReaderUserAccessKeyId:
    Description: The access key ID of the IAM user granting the session invalidation application read access to SQS
    Value: !Ref SQSReaderUserAccessKey
  SQSReaderUserSecretKey:
    Description: The secret key for the IAM user granting the session invalidation application read access to SQS
    Value: !GetAtt SQSReaderUserAccessKey.SecretAccessKey
  SQSQueueArn:
    Description: The ARN of the SQS queue that the session invalidation application sends to
    Value: !GetAtt SessionInvalidationQueue.Arn
  SQSQueueName:
    Description: The name of the SQS queue that the session invalidation application sends to
    Value: !GetAtt SessionInvalidationQueue.QueueName
  SQSQueueUrl:
    Description: The URL of the SQS queue that the session invalidation application sends to
    Value: !Ref SessionInvalidationQueue
